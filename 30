import pytest


# def is_even(number: int) -> bool:
#     return number % 2 == 0
#
#
# def test_is_even_base():
#     expected_result = True
#     actual_result = is_even(2)
#     assert actual_result == expected_result

def calculate_average(numbers: list[float]) -> float:
    """
    Вычисляет среднее значение списка чисел.

    :param numbers: Список чисел
    :return: Среднее значение
    """
    if not numbers:
        raise ValueError("Список чисел не должен быть пустым")

    return sum(numbers) / len(numbers)


def test_valid_numbers():
    # Проверка среднего значения для валидных чисел
    numbers = [7, 2, 4, 8, 9]
    result = calculate_average(numbers)
    assert result == 6.0


def test_empty_list():
    # Проверка, что функция вызывает ValueError при пустом списке
    with pytest.raises(ValueError):
        calculate_average([])


def test_float_numbers():
    # Проверка среднего значения для списка с дробными числами
    numbers = [7.5, 2.5, 4.5, 5.5]
    result = calculate_average(numbers)
    assert result == 5


def test_negative_numbers():
    # Проверка среднего значения для списка с отрицательными числами
    numbers = [-7, -2, -4, -8, -9]
    result = calculate_average(numbers)
    assert result == -6.0


def test_mixed_numbers():
    # Проверка среднего значения для списка с разными типами чисел
    numbers = [7.5, 2.5, 2, -4]
    result = calculate_average(numbers)
    assert result == 2
